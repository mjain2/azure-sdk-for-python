# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import SDKClient
from msrest import Serializer, Deserializer

from ._configuration import PostgreSQLManagementClientConfiguration
from .operations import FlexibleServersOperations
from .operations import FlexibleServersFirewallRulesOperations
from .operations import FirewallRulesOperations
from .operations import FlexibleServersConfigurationsOperations
from .operations import FlexibleServersCustomerMaintenanceWindowOperations
from .operations import FlexibleServersCheckNameAvailabilityOperations
from .operations import Operations
from . import models


class PostgreSQLManagementClient(SDKClient):
    """The Microsoft Azure management API provides create, read, update, and delete functionality for Azure PostgreSQL resources including servers, databases, firewall rules, VNET rules, security alert policies, log files and configurations with new business model.

    :ivar config: Configuration for client.
    :vartype config: PostgreSQLManagementClientConfiguration

    :ivar flexible_servers: FlexibleServers operations
    :vartype flexible_servers: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FlexibleServersOperations
    :ivar flexible_servers_firewall_rules: FlexibleServersFirewallRules operations
    :vartype flexible_servers_firewall_rules: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FlexibleServersFirewallRulesOperations
    :ivar firewall_rules: FirewallRules operations
    :vartype firewall_rules: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FirewallRulesOperations
    :ivar flexible_servers_configurations: FlexibleServersConfigurations operations
    :vartype flexible_servers_configurations: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FlexibleServersConfigurationsOperations
    :ivar flexible_servers_customer_maintenance_window: FlexibleServersCustomerMaintenanceWindow operations
    :vartype flexible_servers_customer_maintenance_window: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FlexibleServersCustomerMaintenanceWindowOperations
    :ivar flexible_servers_check_name_availability: FlexibleServersCheckNameAvailability operations
    :vartype flexible_servers_check_name_availability: azure.mgmt.rdbms.postgresql.flexibleservers.operations.FlexibleServersCheckNameAvailabilityOperations
    :ivar operations: Operations operations
    :vartype operations: azure.mgmt.rdbms.postgresql.flexibleservers.operations.Operations

    :param credentials: Credentials needed for the client to connect to Azure.
    :type credentials: :mod:`A msrestazure Credentials
     object<msrestazure.azure_active_directory>`
    :param subscription_id: The ID of the target subscription.
    :type subscription_id: str
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, subscription_id, base_url=None):

        self.config = PostgreSQLManagementClientConfiguration(credentials, subscription_id, base_url)
        super(PostgreSQLManagementClient, self).__init__(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self.api_version = '2020-02-14-privatepreview'
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.flexible_servers = FlexibleServersOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.flexible_servers_firewall_rules = FlexibleServersFirewallRulesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.firewall_rules = FirewallRulesOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.flexible_servers_configurations = FlexibleServersConfigurationsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.flexible_servers_customer_maintenance_window = FlexibleServersCustomerMaintenanceWindowOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.flexible_servers_check_name_availability = FlexibleServersCheckNameAvailabilityOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
